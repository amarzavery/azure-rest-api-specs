{
  "swagger": "2.0",
  "info": {
    "title": "GraphRbacManagementClient",
    "version": "1.6",
    "description": "The Graph RBAC Management Client"
  },
  "host": "graph.windows.net",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{tenantID}/me": {
      "get": {
        "tags": [
          "Objects"
        ],
        "operationId": "Objects_GetCurrentUser",
        "description": "Gets the details for the currently logged-in user.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/AADObject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        }
      }
    },
    "/{tenantID}/applications": {
      "post": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Create",
        "description": "Create a new application.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateParameters"
            },
            "description": "The parameters for creating an application."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "The application was created successfully.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CRUDApplicationTestPOST21": {
            "$ref": "../examples/CRUDApplicationTest-POST-example-21.json"
          },
          "CreateDeleteAppCredentialTestPOST21": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-POST-example-21.json"
          },
          "CreateDeleteServicePrincipalTestPOST21": {
            "$ref": "../examples/CreateDeleteServicePrincipalTest-POST-example-21.json"
          },
          "CreateDeleteSpCredentialTestPOST21": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-POST-example-21.json"
          }
        }
      },
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_List",
        "description": "Lists applications by filter parameters.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filters to apply to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-odata": "#/definitions/Application",
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Applications_ListNext"
        },
        "x-ms-examples": {
          "CRUDApplicationTestGET25": {
            "$ref": "../examples/CRUDApplicationTest-GET-example-25.json"
          },
          "CRUDApplicationTestGET26": {
            "$ref": "../examples/CRUDApplicationTest-GET-example-26.json"
          },
          "CRUDApplicationTestGET27": {
            "$ref": "../examples/CRUDApplicationTest-GET-example-27.json"
          }
        }
      }
    },
    "/{tenantID}/applications/{applicationObjectId}": {
      "delete": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Delete",
        "description": "Delete an application.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CRUDApplicationTestDELETE310": {
            "$ref": "../examples/CRUDApplicationTest-DELETE-example-310.json"
          },
          "CreateDeleteAppCredentialTestDELETE316": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-DELETE-example-316.json"
          },
          "CreateDeleteServicePrincipalTestDELETE34": {
            "$ref": "../examples/CreateDeleteServicePrincipalTest-DELETE-example-34.json"
          },
          "CreateDeleteSpCredentialTestDELETE318": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-DELETE-example-318.json"
          }
        }
      },
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Get",
        "description": "Get an application by object ID.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CRUDApplicationTestGET32": {
            "$ref": "../examples/CRUDApplicationTest-GET-example-32.json"
          },
          "CRUDApplicationTestGET33": {
            "$ref": "../examples/CRUDApplicationTest-GET-example-33.json"
          },
          "CRUDApplicationTestGET34": {
            "$ref": "../examples/CRUDApplicationTest-GET-example-34.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Patch",
        "description": "Update an existing application.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateParameters"
            },
            "description": "Parameters to update an existing application."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CRUDApplicationTestPATCH38": {
            "$ref": "../examples/CRUDApplicationTest-PATCH-example-38.json"
          },
          "CRUDApplicationTestPATCH39": {
            "$ref": "../examples/CRUDApplicationTest-PATCH-example-39.json"
          }
        }
      }
    },
    "/{tenantID}/applications/{applicationObjectId}/keyCredentials": {
      "get": {
        "tags": [
          "ApplicationKeyCredentials"
        ],
        "operationId": "Applications_ListKeyCredentials",
        "description": "Get the keyCredentials associated with an application.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/KeyCredentialListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "CreateDeleteAppCredentialTestGET42": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-42.json"
          },
          "CreateDeleteAppCredentialTestGET43": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-43.json"
          },
          "CreateDeleteAppCredentialTestGET44": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-44.json"
          },
          "NegativeCredentialTestGET41": {
            "$ref": "../examples/NegativeCredentialTest-GET-example-41.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ApplicationKeyCredentials"
        ],
        "operationId": "Applications_UpdateKeyCredentials",
        "description": "Update the keyCredentials associated with an application.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyCredentialsUpdateParameters"
            },
            "description": "Parameters to update the keyCredentials of an existing application."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteAppCredentialTestPATCH414": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-PATCH-example-414.json"
          },
          "CreateDeleteAppCredentialTestPATCH415": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-PATCH-example-415.json"
          },
          "NegativeCredentialTestPATCH44": {
            "$ref": "../examples/NegativeCredentialTest-PATCH-example-44.json"
          }
        }
      }
    },
    "/{tenantID}/applications/{applicationObjectId}/passwordCredentials": {
      "get": {
        "tags": [
          "ApplicationPasswordCredentials"
        ],
        "operationId": "Applications_ListPasswordCredentials",
        "description": "Get the passwordCredentials associated with an application.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/PasswordCredentialListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "CreateDeleteAppCredentialTestGET55": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-55.json"
          },
          "CreateDeleteAppCredentialTestGET56": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-56.json"
          },
          "CreateDeleteAppCredentialTestGET57": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-57.json"
          },
          "CreateDeleteAppCredentialTestGET58": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-58.json"
          },
          "CreateDeleteAppCredentialTestGET59": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-GET-example-59.json"
          },
          "NegativeCredentialTestGET52": {
            "$ref": "../examples/NegativeCredentialTest-GET-example-52.json"
          },
          "NegativeCredentialTestGET53": {
            "$ref": "../examples/NegativeCredentialTest-GET-example-53.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ApplicationPasswordCredentials"
        ],
        "operationId": "Applications_UpdatePasswordCredentials",
        "description": "Update passwordCredentials associated with an application.",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object ID.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordCredentialsUpdateParameters"
            },
            "description": "Parameters to update passwordCredentials of an existing application."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteAppCredentialTestPATCH510": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-PATCH-example-510.json"
          },
          "CreateDeleteAppCredentialTestPATCH511": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-PATCH-example-511.json"
          },
          "CreateDeleteAppCredentialTestPATCH512": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-PATCH-example-512.json"
          },
          "CreateDeleteAppCredentialTestPATCH513": {
            "$ref": "../examples/CreateDeleteAppCredentialTest-PATCH-example-513.json"
          },
          "NegativeCredentialTestPATCH55": {
            "$ref": "../examples/NegativeCredentialTest-PATCH-example-55.json"
          }
        }
      }
    },
    "/{tenantID}/isMemberOf": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_IsMemberOf",
        "description": "Checks whether the specified user, group, contact, or service principal is a direct or transitive member of the specified group.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckGroupMembershipParameters"
            },
            "description": "The check group membership parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Indicates success. Returns true if the user, contact, group, or service principal is a direct or a transitive member of the specified group; otherwsie, false.",
            "schema": {
              "$ref": "#/definitions/CheckGroupMembershipResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        }
      }
    },
    "/{tenantID}/groups/{groupObjectId}/$links/members/{memberObjectId}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_RemoveMember",
        "description": "Remove a member from a group.",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the group from which to remove the member.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "memberObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Member object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. Indicates success. No response body is returned."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        }
      }
    },
    "/{tenantID}/groups/{groupObjectId}/$links/members": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_AddMember",
        "description": "Add a member to a group.",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the group to which to add the member.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupAddMemberParameters"
            },
            "description": "The URL of the member object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. Indicates success. No response body is returned."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        }
      }
    },
    "/{tenantID}/groups/{groupObjectId}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_Delete",
        "description": "Delete a group from the directory.",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the group to delete.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "ListPagedGroupsTestDELETE9113": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9113.json"
          },
          "ListPagedGroupsTestDELETE9114": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9114.json"
          },
          "ListPagedGroupsTestDELETE9115": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9115.json"
          },
          "ListPagedGroupsTestDELETE9116": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9116.json"
          },
          "ListPagedGroupsTestDELETE9117": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9117.json"
          },
          "ListPagedGroupsTestDELETE9118": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9118.json"
          },
          "ListPagedGroupsTestDELETE9119": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9119.json"
          },
          "ListPagedGroupsTestDELETE9120": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9120.json"
          },
          "ListPagedGroupsTestDELETE9121": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9121.json"
          },
          "ListPagedGroupsTestDELETE9122": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9122.json"
          },
          "ListPagedGroupsTestDELETE9123": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9123.json"
          },
          "ListPagedGroupsTestDELETE9124": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9124.json"
          },
          "ListPagedGroupsTestDELETE9125": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9125.json"
          },
          "ListPagedGroupsTestDELETE9126": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9126.json"
          },
          "ListPagedGroupsTestDELETE9127": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9127.json"
          },
          "ListPagedGroupsTestDELETE9128": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9128.json"
          },
          "ListPagedGroupsTestDELETE9129": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9129.json"
          },
          "ListPagedGroupsTestDELETE9130": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9130.json"
          },
          "ListPagedGroupsTestDELETE9131": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9131.json"
          },
          "ListPagedGroupsTestDELETE9132": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9132.json"
          },
          "ListPagedGroupsTestDELETE9133": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9133.json"
          },
          "ListPagedGroupsTestDELETE9134": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9134.json"
          },
          "ListPagedGroupsTestDELETE9135": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9135.json"
          },
          "ListPagedGroupsTestDELETE9136": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9136.json"
          },
          "ListPagedGroupsTestDELETE9137": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9137.json"
          },
          "ListPagedGroupsTestDELETE9138": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9138.json"
          },
          "ListPagedGroupsTestDELETE9139": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9139.json"
          },
          "ListPagedGroupsTestDELETE9140": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9140.json"
          },
          "ListPagedGroupsTestDELETE9141": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9141.json"
          },
          "ListPagedGroupsTestDELETE9142": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9142.json"
          },
          "ListPagedGroupsTestDELETE9143": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9143.json"
          },
          "ListPagedGroupsTestDELETE9144": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9144.json"
          },
          "ListPagedGroupsTestDELETE9145": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9145.json"
          },
          "ListPagedGroupsTestDELETE9146": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9146.json"
          },
          "ListPagedGroupsTestDELETE9147": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9147.json"
          },
          "ListPagedGroupsTestDELETE9148": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9148.json"
          },
          "ListPagedGroupsTestDELETE9149": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9149.json"
          },
          "ListPagedGroupsTestDELETE9150": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9150.json"
          },
          "ListPagedGroupsTestDELETE9151": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9151.json"
          },
          "ListPagedGroupsTestDELETE9152": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9152.json"
          },
          "ListPagedGroupsTestDELETE9153": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9153.json"
          },
          "ListPagedGroupsTestDELETE9154": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9154.json"
          },
          "ListPagedGroupsTestDELETE9155": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9155.json"
          },
          "ListPagedGroupsTestDELETE9156": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9156.json"
          },
          "ListPagedGroupsTestDELETE9157": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9157.json"
          },
          "ListPagedGroupsTestDELETE9158": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9158.json"
          },
          "ListPagedGroupsTestDELETE9159": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9159.json"
          },
          "ListPagedGroupsTestDELETE9160": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9160.json"
          },
          "ListPagedGroupsTestDELETE9161": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9161.json"
          },
          "ListPagedGroupsTestDELETE9162": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9162.json"
          },
          "ListPagedGroupsTestDELETE9163": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9163.json"
          },
          "ListPagedGroupsTestDELETE9164": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9164.json"
          },
          "ListPagedGroupsTestDELETE9165": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9165.json"
          },
          "ListPagedGroupsTestDELETE9166": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9166.json"
          },
          "ListPagedGroupsTestDELETE9167": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9167.json"
          },
          "ListPagedGroupsTestDELETE9168": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9168.json"
          },
          "ListPagedGroupsTestDELETE9169": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9169.json"
          },
          "ListPagedGroupsTestDELETE9170": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9170.json"
          },
          "ListPagedGroupsTestDELETE9171": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9171.json"
          },
          "ListPagedGroupsTestDELETE9172": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9172.json"
          },
          "ListPagedGroupsTestDELETE9173": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9173.json"
          },
          "ListPagedGroupsTestDELETE9174": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9174.json"
          },
          "ListPagedGroupsTestDELETE9175": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9175.json"
          },
          "ListPagedGroupsTestDELETE9176": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9176.json"
          },
          "ListPagedGroupsTestDELETE9177": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9177.json"
          },
          "ListPagedGroupsTestDELETE9178": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9178.json"
          },
          "ListPagedGroupsTestDELETE9179": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9179.json"
          },
          "ListPagedGroupsTestDELETE9180": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9180.json"
          },
          "ListPagedGroupsTestDELETE9181": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9181.json"
          },
          "ListPagedGroupsTestDELETE9182": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9182.json"
          },
          "ListPagedGroupsTestDELETE9183": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9183.json"
          },
          "ListPagedGroupsTestDELETE9184": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9184.json"
          },
          "ListPagedGroupsTestDELETE9185": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9185.json"
          },
          "ListPagedGroupsTestDELETE9186": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9186.json"
          },
          "ListPagedGroupsTestDELETE9187": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9187.json"
          },
          "ListPagedGroupsTestDELETE9188": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9188.json"
          },
          "ListPagedGroupsTestDELETE9189": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9189.json"
          },
          "ListPagedGroupsTestDELETE9190": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9190.json"
          },
          "ListPagedGroupsTestDELETE9191": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9191.json"
          },
          "ListPagedGroupsTestDELETE9192": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9192.json"
          },
          "ListPagedGroupsTestDELETE9193": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9193.json"
          },
          "ListPagedGroupsTestDELETE9194": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9194.json"
          },
          "ListPagedGroupsTestDELETE9195": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9195.json"
          },
          "ListPagedGroupsTestDELETE9196": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9196.json"
          },
          "ListPagedGroupsTestDELETE9197": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9197.json"
          },
          "ListPagedGroupsTestDELETE9198": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9198.json"
          },
          "ListPagedGroupsTestDELETE9199": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9199.json"
          },
          "ListPagedGroupsTestDELETE9200": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9200.json"
          },
          "ListPagedGroupsTestDELETE9201": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9201.json"
          },
          "ListPagedGroupsTestDELETE9202": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9202.json"
          },
          "ListPagedGroupsTestDELETE9203": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9203.json"
          },
          "ListPagedGroupsTestDELETE9204": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9204.json"
          },
          "ListPagedGroupsTestDELETE9205": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9205.json"
          },
          "ListPagedGroupsTestDELETE9206": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9206.json"
          },
          "ListPagedGroupsTestDELETE9207": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9207.json"
          },
          "ListPagedGroupsTestDELETE9208": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9208.json"
          },
          "ListPagedGroupsTestDELETE9209": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9209.json"
          },
          "ListPagedGroupsTestDELETE9210": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9210.json"
          },
          "ListPagedGroupsTestDELETE9211": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9211.json"
          },
          "ListPagedGroupsTestDELETE9212": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9212.json"
          },
          "ListPagedGroupsTestDELETE9213": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9213.json"
          },
          "ListPagedGroupsTestDELETE9214": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9214.json"
          },
          "ListPagedGroupsTestDELETE9215": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9215.json"
          },
          "ListPagedGroupsTestDELETE9216": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9216.json"
          },
          "ListPagedGroupsTestDELETE9217": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9217.json"
          },
          "ListPagedGroupsTestDELETE9218": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9218.json"
          },
          "ListPagedGroupsTestDELETE9219": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9219.json"
          },
          "ListPagedGroupsTestDELETE9220": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9220.json"
          },
          "ListPagedGroupsTestDELETE9221": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9221.json"
          },
          "ListPagedGroupsTestDELETE9222": {
            "$ref": "../examples/ListPagedGroupsTest-DELETE-example-9222.json"
          },
          "AddRemoveMemberTestDELETE97": {
            "$ref": "../examples/AddRemoveMemberTest-DELETE-example-97.json"
          },
          "CreateDeleteGroupTestDELETE92": {
            "$ref": "../examples/CreateDeleteGroupTest-DELETE-example-92.json"
          }
        }
      }
    },
    "/{tenantID}/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_Create",
        "description": "Create a group in the directory.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupCreateParameters"
            },
            "description": "The parameters for the group to create."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ADGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "ListPagedGroupsTestPOST101": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-101.json"
          },
          "ListPagedGroupsTestPOST102": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-102.json"
          },
          "ListPagedGroupsTestPOST103": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-103.json"
          },
          "ListPagedGroupsTestPOST104": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-104.json"
          },
          "ListPagedGroupsTestPOST105": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-105.json"
          },
          "ListPagedGroupsTestPOST106": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-106.json"
          },
          "ListPagedGroupsTestPOST107": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-107.json"
          },
          "ListPagedGroupsTestPOST108": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-108.json"
          },
          "ListPagedGroupsTestPOST109": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-109.json"
          },
          "ListPagedGroupsTestPOST1010": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1010.json"
          },
          "ListPagedGroupsTestPOST1011": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1011.json"
          },
          "ListPagedGroupsTestPOST1012": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1012.json"
          },
          "ListPagedGroupsTestPOST1013": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1013.json"
          },
          "ListPagedGroupsTestPOST1014": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1014.json"
          },
          "ListPagedGroupsTestPOST1015": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1015.json"
          },
          "ListPagedGroupsTestPOST1016": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1016.json"
          },
          "ListPagedGroupsTestPOST1017": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1017.json"
          },
          "ListPagedGroupsTestPOST1018": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1018.json"
          },
          "ListPagedGroupsTestPOST1019": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1019.json"
          },
          "ListPagedGroupsTestPOST1020": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1020.json"
          },
          "ListPagedGroupsTestPOST1021": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1021.json"
          },
          "ListPagedGroupsTestPOST1022": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1022.json"
          },
          "ListPagedGroupsTestPOST1023": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1023.json"
          },
          "ListPagedGroupsTestPOST1024": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1024.json"
          },
          "ListPagedGroupsTestPOST1025": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1025.json"
          },
          "ListPagedGroupsTestPOST1026": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1026.json"
          },
          "ListPagedGroupsTestPOST1027": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1027.json"
          },
          "ListPagedGroupsTestPOST1028": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1028.json"
          },
          "ListPagedGroupsTestPOST1029": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1029.json"
          },
          "ListPagedGroupsTestPOST1030": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1030.json"
          },
          "ListPagedGroupsTestPOST1031": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1031.json"
          },
          "ListPagedGroupsTestPOST1032": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1032.json"
          },
          "ListPagedGroupsTestPOST1033": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1033.json"
          },
          "ListPagedGroupsTestPOST1034": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1034.json"
          },
          "ListPagedGroupsTestPOST1035": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1035.json"
          },
          "ListPagedGroupsTestPOST1036": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1036.json"
          },
          "ListPagedGroupsTestPOST1037": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1037.json"
          },
          "ListPagedGroupsTestPOST1038": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1038.json"
          },
          "ListPagedGroupsTestPOST1039": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1039.json"
          },
          "ListPagedGroupsTestPOST1040": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1040.json"
          },
          "ListPagedGroupsTestPOST1041": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1041.json"
          },
          "ListPagedGroupsTestPOST1042": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1042.json"
          },
          "ListPagedGroupsTestPOST1043": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1043.json"
          },
          "ListPagedGroupsTestPOST1044": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1044.json"
          },
          "ListPagedGroupsTestPOST1045": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1045.json"
          },
          "ListPagedGroupsTestPOST1046": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1046.json"
          },
          "ListPagedGroupsTestPOST1047": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1047.json"
          },
          "ListPagedGroupsTestPOST1048": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1048.json"
          },
          "ListPagedGroupsTestPOST1049": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1049.json"
          },
          "ListPagedGroupsTestPOST1050": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1050.json"
          },
          "ListPagedGroupsTestPOST1051": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1051.json"
          },
          "ListPagedGroupsTestPOST1052": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1052.json"
          },
          "ListPagedGroupsTestPOST1053": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1053.json"
          },
          "ListPagedGroupsTestPOST1054": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1054.json"
          },
          "ListPagedGroupsTestPOST1055": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1055.json"
          },
          "ListPagedGroupsTestPOST1056": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1056.json"
          },
          "ListPagedGroupsTestPOST1057": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1057.json"
          },
          "ListPagedGroupsTestPOST1058": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1058.json"
          },
          "ListPagedGroupsTestPOST1059": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1059.json"
          },
          "ListPagedGroupsTestPOST1060": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1060.json"
          },
          "ListPagedGroupsTestPOST1061": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1061.json"
          },
          "ListPagedGroupsTestPOST1062": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1062.json"
          },
          "ListPagedGroupsTestPOST1063": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1063.json"
          },
          "ListPagedGroupsTestPOST1064": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1064.json"
          },
          "ListPagedGroupsTestPOST1065": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1065.json"
          },
          "ListPagedGroupsTestPOST1066": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1066.json"
          },
          "ListPagedGroupsTestPOST1067": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1067.json"
          },
          "ListPagedGroupsTestPOST1068": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1068.json"
          },
          "ListPagedGroupsTestPOST1069": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1069.json"
          },
          "ListPagedGroupsTestPOST1070": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1070.json"
          },
          "ListPagedGroupsTestPOST1071": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1071.json"
          },
          "ListPagedGroupsTestPOST1072": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1072.json"
          },
          "ListPagedGroupsTestPOST1073": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1073.json"
          },
          "ListPagedGroupsTestPOST1074": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1074.json"
          },
          "ListPagedGroupsTestPOST1075": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1075.json"
          },
          "ListPagedGroupsTestPOST1076": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1076.json"
          },
          "ListPagedGroupsTestPOST1077": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1077.json"
          },
          "ListPagedGroupsTestPOST1078": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1078.json"
          },
          "ListPagedGroupsTestPOST1079": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1079.json"
          },
          "ListPagedGroupsTestPOST1080": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1080.json"
          },
          "ListPagedGroupsTestPOST1081": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1081.json"
          },
          "ListPagedGroupsTestPOST1082": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1082.json"
          },
          "ListPagedGroupsTestPOST1083": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1083.json"
          },
          "ListPagedGroupsTestPOST1084": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1084.json"
          },
          "ListPagedGroupsTestPOST1085": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1085.json"
          },
          "ListPagedGroupsTestPOST1086": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1086.json"
          },
          "ListPagedGroupsTestPOST1087": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1087.json"
          },
          "ListPagedGroupsTestPOST1088": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1088.json"
          },
          "ListPagedGroupsTestPOST1089": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1089.json"
          },
          "ListPagedGroupsTestPOST1090": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1090.json"
          },
          "ListPagedGroupsTestPOST1091": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1091.json"
          },
          "ListPagedGroupsTestPOST1092": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1092.json"
          },
          "ListPagedGroupsTestPOST1093": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1093.json"
          },
          "ListPagedGroupsTestPOST1094": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1094.json"
          },
          "ListPagedGroupsTestPOST1095": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1095.json"
          },
          "ListPagedGroupsTestPOST1096": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1096.json"
          },
          "ListPagedGroupsTestPOST1097": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1097.json"
          },
          "ListPagedGroupsTestPOST1098": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1098.json"
          },
          "ListPagedGroupsTestPOST1099": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-1099.json"
          },
          "ListPagedGroupsTestPOST10100": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10100.json"
          },
          "ListPagedGroupsTestPOST10101": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10101.json"
          },
          "ListPagedGroupsTestPOST10102": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10102.json"
          },
          "ListPagedGroupsTestPOST10103": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10103.json"
          },
          "ListPagedGroupsTestPOST10104": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10104.json"
          },
          "ListPagedGroupsTestPOST10105": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10105.json"
          },
          "ListPagedGroupsTestPOST10106": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10106.json"
          },
          "ListPagedGroupsTestPOST10107": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10107.json"
          },
          "ListPagedGroupsTestPOST10108": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10108.json"
          },
          "ListPagedGroupsTestPOST10109": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10109.json"
          },
          "ListPagedGroupsTestPOST10110": {
            "$ref": "../examples/ListPagedGroupsTest-POST-example-10110.json"
          },
          "AddRemoveMemberTestPOST101": {
            "$ref": "../examples/AddRemoveMemberTest-POST-example-101.json"
          },
          "CreateDeleteGroupTestPOST101": {
            "$ref": "../examples/CreateDeleteGroupTest-POST-example-101.json"
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_List",
        "description": "Gets list of groups for the current tenant.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Groups_ListNext"
        },
        "x-ms-odata": "#/definitions/ADGroup",
        "x-ms-examples": {
          "FilteredListGroupsTestGET101": {
            "$ref": "../examples/FilteredListGroupsTest-GET-example-101.json"
          },
          "FilteredListGroupsTestGET102": {
            "$ref": "../examples/FilteredListGroupsTest-GET-example-102.json"
          },
          "GroupMemebersTestGET101": {
            "$ref": "../examples/GroupMemebersTest-GET-example-101.json"
          },
          "GroupTestGET101": {
            "$ref": "../examples/GroupTest-GET-example-101.json"
          },
          "ListGroupsTestGET101": {
            "$ref": "../examples/ListGroupsTest-GET-example-101.json"
          },
          "ListPagedGroupsTestGET10111": {
            "$ref": "../examples/ListPagedGroupsTest-GET-example-10111.json"
          },
          "ObjectsByObjectIdsTestGET101": {
            "$ref": "../examples/ObjectsByObjectIdsTest-GET-example-101.json"
          }
        }
      }
    },
    "/{tenantID}/groups/{objectId}/members": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_GetGroupMembers",
        "description": "Gets the members of a group.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the group whose members should be retrieved.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Groups_GetGroupMembersNext"
        },
        "x-ms-examples": {
          "GroupMemebersTestGET112": {
            "$ref": "../examples/GroupMemebersTest-GET-example-112.json"
          }
        }
      }
    },
    "/{tenantID}/groups/{objectId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_Get",
        "description": "Gets group information from the directory.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the user for which to get group information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ADGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "GroupTestGET122": {
            "$ref": "../examples/GroupTest-GET-example-122.json"
          },
          "CreateDeleteGroupTestGET123": {
            "$ref": "../examples/CreateDeleteGroupTest-GET-example-123.json"
          }
        }
      }
    },
    "/{tenantID}/groups/{objectId}/getMemberGroups": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_GetMemberGroups",
        "description": "Gets a collection of object IDs of groups of which the specified group is a member.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the group for which to get group membership.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupGetMemberGroupsParameters"
            },
            "description": "Group filtering parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GroupGetMemberGroupsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "GroupTestPOST133": {
            "$ref": "../examples/GroupTest-POST-example-133.json"
          }
        }
      }
    },
    "/{tenantID}/servicePrincipals": {
      "post": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipals_Create",
        "description": "Creates a service principal in the directory.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicePrincipalCreateParameters"
            },
            "description": "Parameters to create a service principal."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "The service principal was created successfully.",
            "schema": {
              "$ref": "#/definitions/ServicePrincipal"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteServicePrincipalTestPOST142": {
            "$ref": "../examples/CreateDeleteServicePrincipalTest-POST-example-142.json"
          },
          "CreateDeleteSpCredentialTestPOST142": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-POST-example-142.json"
          }
        }
      },
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipals_List",
        "description": "Gets a list of service principals from the current tenant.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ServicePrincipals_ListNext"
        },
        "x-ms-odata": "#/definitions/ServicePrincipal",
        "x-ms-examples": {
          "QueryServicePrincipalTestGET141": {
            "$ref": "../examples/QueryServicePrincipalTest-GET-example-141.json"
          },
          "QueryServicePrincipalTestGET142": {
            "$ref": "../examples/QueryServicePrincipalTest-GET-example-142.json"
          },
          "QueryServicePrincipalTestGET144": {
            "$ref": "../examples/QueryServicePrincipalTest-GET-example-144.json"
          }
        }
      }
    },
    "/{tenantID}/servicePrincipals/{objectId}": {
      "delete": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipals_Delete",
        "description": "Deletes a service principal from the directory.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the service principal to delete.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteServicePrincipalTestDELETE153": {
            "$ref": "../examples/CreateDeleteServicePrincipalTest-DELETE-example-153.json"
          },
          "CreateDeleteSpCredentialTestDELETE1517": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-DELETE-example-1517.json"
          }
        }
      },
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipals_Get",
        "description": "Gets service principal information from the directory.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the service principal to get.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ServicePrincipal"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteServicePrincipalTestGET155": {
            "$ref": "../examples/CreateDeleteServicePrincipalTest-GET-example-155.json"
          },
          "QueryServicePrincipalTestGET153": {
            "$ref": "../examples/QueryServicePrincipalTest-GET-example-153.json"
          }
        }
      }
    },
    "/{tenantID}/servicePrincipals/{objectId}/keyCredentials": {
      "get": {
        "tags": [
          "ServicePrincipalKeyCredentials"
        ],
        "operationId": "ServicePrincipals_ListKeyCredentials",
        "description": "Get the keyCredentials associated with the specified service principal.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the service principal for which to get keyCredentials.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/KeyCredentialListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "CreateDeleteSpCredentialTestGET163": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-163.json"
          },
          "CreateDeleteSpCredentialTestGET164": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-164.json"
          },
          "CreateDeleteSpCredentialTestGET165": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-165.json"
          },
          "NegativeCredentialTestGET166": {
            "$ref": "../examples/NegativeCredentialTest-GET-example-166.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ServicePrincipalKeyCredentials"
        ],
        "operationId": "ServicePrincipals_UpdateKeyCredentials",
        "description": "Update the keyCredentials associated with a service principal.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID for which to get service principal information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyCredentialsUpdateParameters"
            },
            "description": "Parameters to update the keyCredentials of an existing service principal."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteSpCredentialTestPATCH1615": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-PATCH-example-1615.json"
          },
          "CreateDeleteSpCredentialTestPATCH1616": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-PATCH-example-1616.json"
          },
          "NegativeCredentialTestPATCH167": {
            "$ref": "../examples/NegativeCredentialTest-PATCH-example-167.json"
          }
        }
      }
    },
    "/{tenantID}/servicePrincipals/{objectId}/passwordCredentials": {
      "get": {
        "tags": [
          "ServicePrincipalPasswordCredentials"
        ],
        "operationId": "ServicePrincipals_ListPasswordCredentials",
        "description": "Gets the passwordCredentials associated with a service principal.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the service principal.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/PasswordCredentialListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "CreateDeleteSpCredentialTestGET176": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-176.json"
          },
          "CreateDeleteSpCredentialTestGET177": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-177.json"
          },
          "CreateDeleteSpCredentialTestGET178": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-178.json"
          },
          "CreateDeleteSpCredentialTestGET179": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-179.json"
          },
          "CreateDeleteSpCredentialTestGET1710": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-GET-example-1710.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ServicePrincipalPasswordCredentials"
        ],
        "operationId": "ServicePrincipals_UpdatePasswordCredentials",
        "description": "Updates the passwordCredentials associated with a service principal.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the service principal.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordCredentialsUpdateParameters"
            },
            "description": "Parameters to update the passwordCredentials of an existing service principal."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "CreateDeleteSpCredentialTestPATCH1711": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-PATCH-example-1711.json"
          },
          "CreateDeleteSpCredentialTestPATCH1712": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-PATCH-example-1712.json"
          },
          "CreateDeleteSpCredentialTestPATCH1713": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-PATCH-example-1713.json"
          },
          "CreateDeleteSpCredentialTestPATCH1714": {
            "$ref": "../examples/CreateDeleteSpCredentialTest-PATCH-example-1714.json"
          },
          "NegativeCredentialTestPATCH178": {
            "$ref": "../examples/NegativeCredentialTest-PATCH-example-178.json"
          }
        }
      }
    },
    "/{tenantID}/users": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "Users_Create",
        "description": "Create a new user.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateParameters"
            },
            "description": "Parameters to create a user."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "Created. Indicates success. The new user is returned in the response body.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "ListPagedUsersTestPOST181": {
            "$ref": "../examples/ListPagedUsersTest-POST-example-181.json"
          },
          "ListPagedUsersTestPOST182": {
            "$ref": "../examples/ListPagedUsersTest-POST-example-182.json"
          },
          "ListPagedUsersTestPOST183": {
            "$ref": "../examples/ListPagedUsersTest-POST-example-183.json"
          },
          "ListPagedUsersTestPOST184": {
            "$ref": "../examples/ListPagedUsersTest-POST-example-184.json"
          },
          "ListPagedUsersTestPOST185": {
            "$ref": "../examples/ListPagedUsersTest-POST-example-185.json"
          },
          "ListPagedUsersTestPOST186": {
            "$ref": "../examples/ListPagedUsersTest-POST-example-186.json"
          },
          "AddRemoveMemberTestPOST182": {
            "$ref": "../examples/AddRemoveMemberTest-POST-example-182.json"
          },
          "CreateDeleteUserTestPOST181": {
            "$ref": "../examples/CreateDeleteUserTest-POST-example-181.json"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "Users_List",
        "description": "Gets list of users for the current tenant.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UserListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Users_ListNext"
        },
        "x-ms-odata": "#/definitions/User",
        "x-ms-examples": {
          "FilteredListUsersTestGET181": {
            "$ref": "../examples/FilteredListUsersTest-GET-example-181.json"
          },
          "FilteredListUsersTestGET182": {
            "$ref": "../examples/FilteredListUsersTest-GET-example-182.json"
          },
          "GetUserUsingSignInNameTestGET181": {
            "$ref": "../examples/GetUserUsingSignInNameTest-GET-example-181.json"
          },
          "GetUserUsingSignInNameTestGET182": {
            "$ref": "../examples/GetUserUsingSignInNameTest-GET-example-182.json"
          },
          "ListUsersTestGET181": {
            "$ref": "../examples/ListUsersTest-GET-example-181.json"
          },
          "ObjectsByObjectIdsTestGET182": {
            "$ref": "../examples/ObjectsByObjectIdsTest-GET-example-182.json"
          },
          "UserTestGET181": {
            "$ref": "../examples/UserTest-GET-example-181.json"
          }
        }
      }
    },
    "/{tenantID}/users/{upnOrObjectId}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "Users_Get",
        "description": "Gets user information from the directory.",
        "parameters": [
          {
            "name": "upnOrObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID or principal name of the user for which to get information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "UserTestGET192": {
            "$ref": "../examples/UserTest-GET-example-192.json"
          },
          "CreateDeleteUserTestGET193": {
            "$ref": "../examples/CreateDeleteUserTest-GET-example-193.json"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "operationId": "Users_Update",
        "description": "Updates a user.",
        "parameters": [
          {
            "name": "upnOrObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID or principal name of the user to update.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateParameters"
            },
            "description": "Parameters to update an existing user."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "Users_Delete",
        "description": "Delete a user.",
        "parameters": [
          {
            "name": "upnOrObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID or principal name of the user to delete.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-examples": {
          "AddRemoveMemberTestDELETE198": {
            "$ref": "../examples/AddRemoveMemberTest-DELETE-example-198.json"
          },
          "CreateDeleteUserTestDELETE192": {
            "$ref": "../examples/CreateDeleteUserTest-DELETE-example-192.json"
          }
        }
      }
    },
    "/{tenantID}/users/{objectId}/getMemberGroups": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "Users_GetMemberGroups",
        "description": "Gets a collection that contains the object IDs of the groups of which the user is a member.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The object ID of the user for which to get group membership.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGetMemberGroupsParameters"
            },
            "description": "User filtering parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UserGetMemberGroupsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "UserTestPOST203": {
            "$ref": "../examples/UserTest-POST-example-203.json"
          },
          "AddRemoveMemberTestPOST204": {
            "$ref": "../examples/AddRemoveMemberTest-POST-example-204.json"
          },
          "AddRemoveMemberTestPOST205": {
            "$ref": "../examples/AddRemoveMemberTest-POST-example-205.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/{tenantID}/{nextLink}?Groups_ListNext": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_ListNext",
        "description": "Gets a list of groups for the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GroupListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Groups_ListNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?Groups_GetGroupMembersNext": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "Groups_GetGroupMembersNext",
        "description": "Gets the members of a group.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Groups_GetGroupMembersNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?Applications_ListNext": {
      "get": {
        "tags": [
          "Applications"
        ],
        "operationId": "Applications_ListNext",
        "description": "Gets a list of applications from the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Applications_ListNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?ServicePrincipals_ListNext": {
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipals_ListNext",
        "description": "Gets a list of service principals from the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ServicePrincipals_ListNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?Users_ListNext": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "Users_ListNext",
        "description": "Gets a list of users for the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for the list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/UserListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/GraphError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "Users_ListNext"
        }
      }
    }
  },
  "definitions": {
    "GraphError": {
      "properties": {
        "odata.error": {
          "type": "object",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OdataError",
          "description": "A Graph API error."
        }
      },
      "description": "Active Directory error information."
    },
    "OdataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "object",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ErrorMessage",
          "description": "Error Message."
        }
      },
      "description": "Active Directory OData error information."
    },
    "ErrorMessage": {
      "properties": {
        "value": {
          "type": "string",
          "x-ms-client-name": "message",
          "description": "Error message value."
        }
      },
      "description": "Active Directory error message."
    },
    "KeyCredential": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date."
        },
        "value": {
          "type": "string",
          "description": "Key value."
        },
        "keyId": {
          "type": "string",
          "description": "Key ID."
        },
        "usage": {
          "type": "string",
          "description": "Usage. Acceptable values are 'Verify' and 'Sign'."
        },
        "type": {
          "type": "string",
          "description": "Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'."
        }
      },
      "description": "Active Directory Key Credential information."
    },
    "PasswordCredential": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date."
        },
        "keyId": {
          "type": "string",
          "description": "Key ID."
        },
        "value": {
          "type": "string",
          "description": "Key value."
        }
      },
      "description": "Active Directory Password Credential information."
    },
    "ApplicationCreateParameters": {
      "properties": {
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is available to other tenants."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application."
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application."
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application."
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "The list of KeyCredential objects."
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "The list of PasswordCredential objects."
        }
      },
      "required": [
        "availableToOtherTenants",
        "displayName",
        "identifierUris"
      ],
      "description": "Request parameters for creating a new application."
    },
    "ApplicationUpdateParameters": {
      "properties": {
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is available to other tenants"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application."
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application."
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application."
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "The list of KeyCredential objects."
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "The list of PasswordCredential objects."
        }
      },
      "description": "Request parameters for updating an existing application."
    },
    "Application": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "appId": {
          "type": "string",
          "description": "The application ID."
        },
        "appPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The application permissions."
        },
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Whether the application is be available to other tenants."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the application."
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of URIs for the application."
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of reply URLs for the application."
        },
        "homepage": {
          "type": "string",
          "description": "The home page of the application."
        }
      },
      "description": "Active Directory application information."
    },
    "ApplicationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "description": "A collection of applications."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Application list operation result."
    },
    "KeyCredentialListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "A collection of KeyCredentials."
        }
      },
      "description": "KeyCredential list operation result."
    },
    "KeyCredentialsUpdateParameters": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "A collection of KeyCredentials."
        }
      },
      "required": [
        "value"
      ],
      "description": "Request parameters for a KeyCredentials update operation"
    },
    "PasswordCredentialListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "A collection of PasswordCredentials."
        }
      },
      "description": "PasswordCredential list operation result."
    },
    "PasswordCredentialsUpdateParameters": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "A collection of PasswordCredentials."
        }
      },
      "required": [
        "value"
      ],
      "description": "Request parameters for a PasswordCredentials update operation."
    },
    "AADObject": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The ID of the object."
        },
        "objectType": {
          "type": "string",
          "description": "The type of AAD object."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the object."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The principal name of the object."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the object."
        },
        "mailEnabled": {
          "type": "boolean",
          "description": "Whether the AAD object is mail-enabled."
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Whether the AAD object is security-enabled."
        },
        "signInName": {
          "type": "string",
          "description": "The sign-in name of the object."
        },
        "servicePrincipalNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of service principal names associated with the object."
        },
        "userType": {
          "type": "string",
          "description": "The user type of the object."
        }
      },
      "description": "The properties of an Active Directory object."
    },
    "GetObjectsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AADObject"
          },
          "description": "A collection of Active Directory objects."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "The response to an Active Directory object inquiry API request."
    },
    "GroupAddMemberParameters": {
      "properties": {
        "url": {
          "type": "string",
          "description": "A member object URL, such as \"https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd\", where \"0b1f9851-1bf0-433f-aec3-cb9272f093dc\" is the tenantId and \"f260bbc4-c254-447b-94cf-293b5ec434dd\" is the objectId of the member (user, application, servicePrincipal, group) to be added."
        }
      },
      "required": [
        "url"
      ],
      "description": "Request parameters for adding a member to a group."
    },
    "GroupCreateParameters": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group display name"
        },
        "mailEnabled": {
          "type": "boolean",
          "description": "Whether the group is mail-enabled. Must be false. This is because only pure security groups can be created using the Graph API.",
          "enum": [
            false
          ]
        },
        "mailNickname": {
          "type": "string",
          "description": "Mail nickname"
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Whether the group is a security group. Must be true. This is because only pure security groups can be created using the Graph API.",
          "enum": [
            true
          ]
        }
      },
      "required": [
        "displayName",
        "mailEnabled",
        "mailNickname",
        "securityEnabled"
      ],
      "description": "Request parameters for creating a new group."
    },
    "ADGroup": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the group."
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Whether the group is security-enable."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the group."
        }
      },
      "description": "Active Directory group information."
    },
    "GroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ADGroup"
          },
          "description": "A collection of Active Directory groups."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Server response for Get tenant groups API call"
    },
    "GroupGetMemberGroupsParameters": {
      "properties": {
        "securityEnabledOnly": {
          "type": "boolean",
          "description": "If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked."
        }
      },
      "required": [
        "securityEnabledOnly"
      ],
      "description": "Request parameters for GetMemberGroups API call."
    },
    "GroupGetMemberGroupsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of group IDs of which the group is a member."
        }
      },
      "description": "Server response for GetMemberGroups API call."
    },
    "CheckGroupMembershipParameters": {
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The object ID of the group to check."
        },
        "memberId": {
          "type": "string",
          "description": "The object ID of the contact, group, user, or service principal to check for membership in the specified group."
        }
      },
      "required": [
        "groupId",
        "memberId"
      ],
      "description": "Request parameters for IsMemberOf API call."
    },
    "CheckGroupMembershipResult": {
      "properties": {
        "value": {
          "type": "boolean",
          "description": "True if the specified user, group, contact, or service principal has either direct or transitive membership in the specified group; otherwise, false."
        }
      },
      "description": "Server response for IsMemberOf API call"
    },
    "ServicePrincipalCreateParameters": {
      "properties": {
        "appId": {
          "type": "string",
          "description": "application Id"
        },
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled"
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "A collection of KeyCredential objects."
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "A collection of PasswordCredential objects"
        }
      },
      "required": [
        "appId",
        "accountEnabled"
      ],
      "description": "Request parameters for creating a new service principal."
    },
    "ServicePrincipal": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the service principal."
        },
        "appId": {
          "type": "string",
          "description": "The application ID."
        },
        "servicePrincipalNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of service principal names."
        }
      },
      "description": "Active Directory service principal information."
    },
    "ServicePrincipalListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePrincipal"
          },
          "description": "the list of service principals."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "the URL to get the next set of results."
        }
      },
      "description": "Server response for get tenant service principals API call."
    },
    "PasswordProfile": {
      "properties": {
        "password": {
          "type": "string",
          "description": "Password"
        },
        "forceChangePasswordNextLogin": {
          "type": "boolean",
          "description": "Whether to force a password change on next login."
        }
      },
      "required": [
        "password"
      ],
      "description": "The password profile associated with a user."
    },
    "UserCreateParameters": {
      "properties": {
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "passwordProfile": {
          "$ref": "#/definitions/PasswordProfile",
          "description": "Password Profile"
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name (someuser@contoso.com). It must contain one of the verified domains for the tenant."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user."
        },
        "immutableId": {
          "type": "string",
          "description": "This must be specified if you are using a federated domain for the user's userPrincipalName (UPN) property when creating a new user account. It is used to associate an on-premises Active Directory user account with their Azure AD user object."
        }
      },
      "required": [
        "accountEnabled",
        "displayName",
        "passwordProfile",
        "userPrincipalName",
        "mailNickname"
      ],
      "description": "Request parameters for creating a new work or school account user."
    },
    "UserUpdateParameters": {
      "properties": {
        "accountEnabled": {
          "type": "boolean",
          "description": "Whether the account is enabled."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "passwordProfile": {
          "$ref": "#/definitions/PasswordProfile",
          "description": "The password profile of the user."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user."
        }
      },
      "description": "Request parameters for updating an existing work or school account user."
    },
    "User": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The object ID."
        },
        "objectType": {
          "type": "string",
          "description": "The object type."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The principal name of the user."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "signInName": {
          "type": "string",
          "description": "The sign-in name of the user."
        },
        "mail": {
          "type": "string",
          "description": "The primary email address of the user."
        },
        "mailNickname": {
          "type": "string",
          "description": "The mail alias for the user."
        }
      },
      "description": "Active Directory user information."
    },
    "UserGetMemberGroupsParameters": {
      "properties": {
        "securityEnabledOnly": {
          "type": "boolean",
          "description": "If true, only membership in security-enabled groups should be checked. Otherwise, membership in all groups should be checked."
        }
      },
      "required": [
        "securityEnabledOnly"
      ],
      "description": "Request parameters for GetMemberGroups API call."
    },
    "UserGetMemberGroupsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A collection of group IDs of which the user is a member."
        }
      },
      "description": "Server response for GetMemberGroups API call."
    },
    "UserListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "description": "the list of users."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Server response for Get tenant users API call."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "tenantIDInPath": {
      "name": "tenantID",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The tenant ID."
    }
  }
}